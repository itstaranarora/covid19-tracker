{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","img/icons/deaths.svg","img/icons/infected.svg","img/icons/recovered.svg","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css"],"names":["Cards","data","confirmed","recovered","deaths","icons","infectedimg","recoveredimg","deathsimg","dataItems","name","className","styles","container","map","item","i","key","cx","card","src","alt","cardIcon","cardValue","start","end","value","duration","separator","cardTitle","url","fetchData","country","a","changeableUrl","axios","get","lastUpdate","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","defaults","global","legend","display","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","borderColor","fill","backgroundColor","barChart","label","options","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","selectedCountry","setSelectedCountry","countryName","push","picker","placeholder","onChange","selectedOption","App","state","setFetchedData","fetchedData","setState","this","header","Date","toDateString","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e830ec59.chunk.js","sourcesContent":["import React from 'react';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\nimport deathsimg from '../../img/icons/deaths.svg';\nimport infectedimg from '../../img/icons/infected.svg';\nimport recoveredimg from '../../img/icons/recovered.svg';\n\nconst Cards = ({ data: { confirmed, recovered, deaths } }) => {\n  if (!confirmed) {\n    return 'loading...';\n  }\n\n  const icons = [infectedimg,recoveredimg,deathsimg];\n\n  const dataItems = [confirmed, recovered, deaths];\n  dataItems[0].name = 'infected';\n  dataItems[1].name = 'recovered';\n  dataItems[2].name = 'deaths';\n\n  return (\n    <div className={styles.container}>\n      {dataItems.map((item,i) => (\n        <div key={item.name} className={cx(styles.card, styles[item.name])}>\n          <img src={icons[i]}\n            alt={item.name} \n            className={styles.cardIcon}\n          />\n          <h3 className={styles.cardValue}>\n            <CountUp start={0} end={item.value} duration={2.5} separator=\".\" />\n          </h3>\n          <h2 className={styles.cardTitle}>{item.name}</h2>\n        </div>\n      ))}\n    </div>\n  )}\n      \n    \n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`)\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }))\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { defaults ,Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\ndefaults.global.legend.display = false;\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n    dailyData.length\n      ? (\n        <Line\n          data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n              data: dailyData.map(({ confirmed }) => confirmed),\n              borderColor: 'rgba(255, 162, 0, 1)',\n              fill: true,\n              backgroundColor: 'rgba(255, 162, 0, 0.1',\n            }, {\n              data: dailyData.map(({ deaths }) => deaths),\n              borderColor: 'rgba(238, 60, 60, 1)',\n              backgroundColor: 'rgba(238, 60, 60, 0.1)',\n              fill: true,\n            }],\n          }} />\n      ) : null\n  );\n\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n              label: \"People\",\n              backgroundColor: [\n                'rgba(255, 162, 0, .5)',\n                'rgba(52, 198, 53, .5)',\n                'rgba(238, 60, 60, .5)',\n              ],\n              data: [confirmed.value, recovered.value, deaths.value]\n            }]\n          }}\n          options={{legend: { display: false }}}\n        />\n      ) : null\n  )\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select'\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange, country }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(country);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    }\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  const handleChange = (selectedOption) => {\n    setSelectedCountry(selectedOption.value);\n    handleCountryChange(selectedOption.value);\n  };\n\n  const options = [{ value: '', label: 'Global' }];\n  fetchedCountries.map((countryName) => options.push({ value: countryName, label: countryName }));\n\n  return (\n    <div className={styles.picker}>\n      <Select\n        placeholder=\"by Country\"\n        value={selectedCountry}\n        onChange={handleChange}\n        options={options}\n      />\n    </div>\n  )\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport \"typeface-roboto\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n  };\n\n  async componentDidMount() {\n    this.setFetchedData();\n  }\n\n  handleCountryChange = async (country) => {\n    this.setFetchedData(country);\n  }\n\n  setFetchedData = async (country) => {\n    const fetchedData = await fetchData(country || \"\")\n\n    this.setState({\n      data: fetchedData,\n      country\n    })\n  }\n\n  // async componentDidMount() {\n  //   const data = await fetchData();\n  //   this.setState({ data: data });\n  // }\n\n  handleCountryChange = async (country) => {\n    this.setFetchedData(country);\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <header className={styles.header} > \n          <h1>COVID-19 Tracker</h1>\n          <p>Last Update on {\" \"}\n            <span>\n              {new Date(data.lastUpdate).toDateString()}\n            </span>\n          </p>\n        </header>\n        <Cards data={data} />\n        <div className={styles.picker}> \n          <h2>Cases</h2>\n          <CountryPicker \n            country={country} \n            handleCountryChange={this.handleCountryChange} \n          />\n        </div>\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"picker\":\"App_picker__2V-Du\"};","module.exports = __webpack_public_path__ + \"static/media/deaths.b604feeb.svg\";","module.exports = __webpack_public_path__ + \"static/media/infected.2ace55b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/recovered.c809f6a4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picker\":\"CountryPicker_picker__Ndewb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"cardTitle\":\"Cards_cardTitle__29IaC\",\"cardValue\":\"Cards_cardValue__1cu9w\",\"cardIcon\":\"Cards_cardIcon__Wzed_\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};"],"sourceRoot":""}